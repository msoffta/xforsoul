import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import config
from filters import IsAdminFilter, IsOwnerFilter

logging.basicConfig(level=logging.INFO)


# init bot
async def on_startup(dp):
    await bot.send_message(config.BOT_OWNER, "BOT_Started"
                                             "\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")


storage = MemoryStorage()
bot = Bot(token="5626042316:AAGXx65KiWKOR6tFIgPE8Xl_1yUtnkSRXKI")
dp = Dispatcher(bot, storage=storage)


class predloj(StatesGroup):
    get = State()


class prvideo(StatesGroup):
    video = State()


class prphoto(StatesGroup):
    photo = State()


class praudio(StatesGroup):
    audio = State()


class prdrugoe(StatesGroup):
    drugoe = State()


# activate filters
dp.filters_factory.bind(IsOwnerFilter)
dp.filters_factory.bind(IsAdminFilter)

@dp.message_handler(commands='start')
async def start(message: types.Message):
    reply = ReplyKeyboardMarkup(resize_keyboard=True)
    r1 = '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å (—Ñ–æ—Ç–æ –∏ —Ç.–¥)'
    r2 = '–ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É'
    r3 = '–°–≤—è–∑–∞—Ç—å—Å—è —Å –ê–¥–º–∏–Ω–æ–º'
    r4 = '–°–≤—è–∑–∞—Ç—å—Å—è —Å –í–ª–∞–¥–µ–ª—å—Ü–æ–º'
    r6 = '–ù–∞—à –ß–∞—Ç'
    r7 = '–ö—É–ø–∏—Ç—å —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞'
    btn1 = "–û—Ç–º–µ–Ω–∞"
    reply.add(r1, r2, r3, r4, r6, r7)
    reply.insert(btn1)
    await message.answer('–ó–¥—Ä–∞—Å—Ç–≤—É–π, –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏‚öúÔ∏è'
                         '\n              –ü–∏—à–∏ –ø–æ –ø–æ–≤–æ–¥—É —Ä–µ–∫–ª–∞–º—ã‚ôªÔ∏è'
                         '\n     –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∏–µ –∏–¥–µ–∏ –¥–ª—è –∫–∞–Ω–∞–ª–∞‚ùóÔ∏è'
                         '\n      –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–∏ –∏–¥–µ–∏, —Å–≤–æ–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ãüëåüèº')
    await message.answer('–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ–µ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ –º–µ–Ω—é', reply_markup=reply)

@dp.message_handler(commands='delete_b')
async def remove_b(message: types.Message):
    markup = ReplyKeyboardRemove()
    await message.answer('–ö–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã', reply_markup=markup)

@dp.message_handler(content_types=['text'])
async def predlojka(message: types.Message):
    if message.text == "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å (—Ñ–æ—Ç–æ –∏ —Ç.–¥)":
        reply = ReplyKeyboardMarkup(resize_keyboard=True)
        r1 = "–§–æ—Ç–æ"
        r2 = "–í–∏–¥–µ–æ"
        r3 = "–ú—É–∑—ã–∫—É"
        r4 = "–î—Ä—É–≥–æ–µ"
        reply.add(r1, r2, r3, r4)
        await message.answer('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É?', reply_markup=reply)
        await predloj.get.set()
    elif message.text == "–ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É":
        inline = InlineKeyboardMarkup()
        inlined = InlineKeyboardButton("–ú–µ–Ω–µ–¥–∂–µ—Ä", url='https://t.me/Abduqodirov_19')
        inline.add(inlined)
        await message.answer("–†–µ–∫–ª–∞–º–Ω—ã–π", reply_markup=inline)
    elif message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ê–¥–º–∏–Ω–æ–º":
        inline = InlineKeyboardMarkup(row_width=3)
        inlined = InlineKeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞üî∞', url='https://t.me/adiljanov_i')
        inline.add(inlined)
        await message.answer('–ü—Ä–æ—Ñ–∏–ª—å', reply_markup=inline)
    elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –í–ª–∞–¥–µ–ª—å—Ü–æ–º':
        inline = InlineKeyboardMarkup(row_width=3)
        inlined = InlineKeyboardButton('–í–ª–∞–¥–µ–ª–µ—Ü–∞‚öúÔ∏è', url='https://t.me/Rasul1ov')
        inline.add(inlined)
        await message.answer("–ü—Ä–æ—Ñ–∏–ª—å", reply_markup=inline)
    elif message.text == "–ù–∞—à –ß–∞—Ç":
        inline = InlineKeyboardMarkup(row_width=3)
        inlined = InlineKeyboardButton('–ù–∞—à —á–∞—Ç üè†', url='https://t.me/druzya_chatikX')
        inline.add(inlined)
        await bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∞', reply_markup=inline)
    elif message.text == '–ö—É–ø–∏—Ç—å —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞':
        inline = InlineKeyboardMarkup()
        inlined = InlineKeyboardButton("–ü—Ä–æ—Ñ–∏–ª—åüë®üèª‚Äçüíª", url='t.me/theHero_7')
        inline.add(inlined)
        await message.answer('–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ —è @theHero_7 —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞'
                             '\n Ô∏è–ü–∏—Å–∞–≤—à–∏–π –µ–º—É –∫–æ–¥ –∏ —Ç.–¥'
                             '\n –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞'
                             '\n –ü–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É '
                             '\n üëáüëáüëá', reply_markup=inline)
    elif message.text == '–û—Ç–º–µ–Ω–∞':
        reply = ReplyKeyboardRemove()
        await message.answer("–ó–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è...", reply_markup=reply)

@dp.message_handler(content_types=['text'], state=predloj.get)
async def select_action(message: types.Message, state: FSMContext):
    reply = ReplyKeyboardRemove()
    if message.text == "–§–æ—Ç–æ":
        await message.answer("–û—Ç–ª–∏—á–Ω–æ, "
                             "\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é", reply_markup=reply)
        await prphoto.photo.set()
    elif message.text == "–í–∏–¥–µ–æ":
        await message.answer("–û—Ç–ª–∏—á–Ω–æ,"
                             "\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∏–¥–µ–æ", reply_markup=reply)
        await prvideo.video.set()
    elif message.text == "–ú—É–∑—ã–∫—É":
        await message.answer("–û—Ç–ª–∏—á–Ω–æ,"
                             "\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ú—É–∑—ã–∫—É", reply_markup=reply)
        await praudio.audio.set()
    elif message.text == "–î—Ä—É–≥–æ–µ":
        await message.answer("–û—Ç–ª–∏—á–Ω–æ,"
                             "\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é", reply_markup=reply)
        await prdrugoe.drugoe.set()


@dp.message_handler(content_types=['photo'], state=prphoto.photo)
async def photo(message: types.Message, state: FSMContext):
    reply = ReplyKeyboardMarkup(resize_keyboard=True)
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    username = message.from_user.username
    photo_id = message.photo[-1].file_id
    r1 = "/start"
    reply.add(r1)
    await message.answer('OK'
                         '\n–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à–µ —Ñ–æ—Ç–æ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º', reply_markup=reply)
    await bot.send_photo(config.BOT_CHAT, photo_id,
                         caption=f"–≠—Ç–æ —Ñ–æ—Ç–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç {user_id}, {user_name}, @{username}")
    await state.finish()


@dp.message_handler(content_types='video', state=prvideo.video)
async def video(message: types.Message, state: FSMContext):
    reply = ReplyKeyboardMarkup(resize_keyboard=True)
    r1 = "/start"
    reply.add(r1)
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    username = message.from_user.username
    id_id = message.video.file_id
    await message.answer('OK'
                         '\n–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à–µ –≤–∏–¥–µ–æ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º', reply_markup=reply)
    await bot.send_video(config.BOT_CHAT, id_id,
                         caption=f"–≠—Ç–æ –≤–∏–¥–µ–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç {user_id}, {user_name} @{username}")
    await state.finish()


@dp.message_handler(content_types='audio', state=praudio.audio)
async def audio(message: types.Message, state: FSMContext):
    reply = ReplyKeyboardMarkup(resize_keyboard=True)
    r1 = "/start"
    reply.add(r1)
    audio_id = message.audio.file_id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    username = message.from_user.username
    await message.answer('OK'
                         '\n–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à—É –º—É–∑—ã–∫—É –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º', reply_markup=reply)
    await bot.send_audio(config.BOT_CHAT, audio_id,
                         caption=f"–≠—Ç–æ –º—É–∑—ã–∫–∞ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç {user_id}, {user_name} @{username}")
    await state.finish()


@dp.message_handler(content_types='text', state=prdrugoe.drugoe)
async def drugoe(message: types.Message, state: FSMContext):
    reply = ReplyKeyboardMarkup(resize_keyboard=True)
    r1 = "/start"
    reply.add(r1)
    text = message.text
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    username = message.from_user.username
    await message.answer("OK"
                         "\n–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º", reply_markup=reply)
    await bot.send_message(config.BOT_CHAT, f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç @{username} {user_id} {user_name}'
                                            f'\n{text}')
    await state.finish()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
